/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Frontend.java
 *
 * Created on Nov 2, 2010, 1:10:28 PM
 */
package de.haas.searchandfind.frontend;

import de.haas.searchandfind.common.Constants;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.Popup;
import javax.swing.PopupFactory;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.index.Term;
import org.apache.lucene.queryParser.ParseException;
import org.apache.lucene.queryParser.QueryParser;
import org.apache.lucene.search.BooleanClause.Occur;
import org.apache.lucene.search.BooleanQuery;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.TermQuery;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.store.SimpleFSDirectory;
import org.apache.lucene.util.Version;

/**
 *
 * @author laga
 */
public class Frontend extends javax.swing.JFrame {

    private IndexSearcher indexSearcher = null;

    /** Creates new form Frontend */
    public Frontend() {
        initComponents();
        addPanes();
    }

    private void addPanes() {

        JScrollPane simpleQueryScrollPane = new JScrollPane(this.simpleQueryPanel);
        JScrollPane advancedQueryScrollPane = new JScrollPane(this.advancedQueryPanel);
        JScrollPane rawQueryScrollPane = new JScrollPane(this.rawQueryPanel);
        this.tabbedQueryPane.add("Simple Query", simpleQueryScrollPane);
        this.tabbedQueryPane.add("Advanced Query", advancedQueryScrollPane);
        this.tabbedQueryPane.add("Raw Query", rawQueryScrollPane);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        advancedQueryPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        advancedQueryContentField = new javax.swing.JTextField();
        advancedSearchButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        advancedQueryTitleField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        advancedQueryKeyWordsField = new javax.swing.JTextField();
        simpleQueryPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        simpleQueryButton = new javax.swing.JButton();
        simplequeryField = new javax.swing.JTextField();
        rawQueryPanel = new javax.swing.JPanel();
        rawQueryField = new javax.swing.JTextField();
        rawQueryButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        tabbedQueryPane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openDirectoryButton = new javax.swing.JMenuItem();

        jLabel2.setText("Content");

        advancedQueryContentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advancedQueryContentFieldActionPerformed(evt);
            }
        });

        advancedSearchButton.setText("Search");
        advancedSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advancedSearchButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Title");

        advancedQueryTitleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advancedQueryTitleFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Keywords");

        javax.swing.GroupLayout advancedQueryPanelLayout = new javax.swing.GroupLayout(advancedQueryPanel);
        advancedQueryPanel.setLayout(advancedQueryPanelLayout);
        advancedQueryPanelLayout.setHorizontalGroup(
            advancedQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
            .addGroup(advancedQueryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(advancedQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(advancedQueryContentField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(advancedQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(advancedQueryPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(65, 65, 65)
                        .addComponent(jLabel4))
                    .addGroup(advancedQueryPanelLayout.createSequentialGroup()
                        .addComponent(advancedQueryTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(advancedQueryKeyWordsField)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(advancedSearchButton)
                .addContainerGap())
        );
        advancedQueryPanelLayout.setVerticalGroup(
            advancedQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 71, Short.MAX_VALUE)
            .addGroup(advancedQueryPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(advancedQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(advancedQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(advancedQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(advancedQueryContentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(advancedQueryTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(advancedQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(advancedQueryKeyWordsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(advancedSearchButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText("Enter Search String");

        simpleQueryButton.setText("Search");
        simpleQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpleQueryButtonActionPerformed(evt);
            }
        });

        simplequeryField.setColumns(10);
        simplequeryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simplequeryFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout simpleQueryPanelLayout = new javax.swing.GroupLayout(simpleQueryPanel);
        simpleQueryPanel.setLayout(simpleQueryPanelLayout);
        simpleQueryPanelLayout.setHorizontalGroup(
            simpleQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 218, Short.MAX_VALUE)
            .addGroup(simpleQueryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(simpleQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(simpleQueryPanelLayout.createSequentialGroup()
                        .addComponent(simplequeryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(simpleQueryButton)))
                .addContainerGap())
        );
        simpleQueryPanelLayout.setVerticalGroup(
            simpleQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 64, Short.MAX_VALUE)
            .addGroup(simpleQueryPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(simpleQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(simpleQueryButton)
                    .addGroup(simpleQueryPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(simplequeryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rawQueryButton.setText("Search");
        rawQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rawQueryButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Enter Query in Lucene Query Syntax");

        javax.swing.GroupLayout rawQueryPanelLayout = new javax.swing.GroupLayout(rawQueryPanel);
        rawQueryPanel.setLayout(rawQueryPanelLayout);
        rawQueryPanelLayout.setHorizontalGroup(
            rawQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 421, Short.MAX_VALUE)
            .addGroup(rawQueryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rawQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rawQueryPanelLayout.createSequentialGroup()
                        .addComponent(rawQueryField, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rawQueryButton))
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rawQueryPanelLayout.setVerticalGroup(
            rawQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 201, Short.MAX_VALUE)
            .addGroup(rawQueryPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(rawQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rawQueryField, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(rawQueryButton))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        resultList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(resultList);

        jLabel1.setText("Results");

        fileMenu.setText("File");

        openDirectoryButton.setText("Open Lucene Index");
        openDirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openDirectoryButtonActionPerformed(evt);
            }
        });
        fileMenu.add(openDirectoryButton);

        jMenuBar1.add(fileMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabbedQueryPane, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabbedQueryPane, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void advancedQueryContentFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advancedQueryContentFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_advancedQueryContentFieldActionPerformed

    private void advancedQueryTitleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advancedQueryTitleFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_advancedQueryTitleFieldActionPerformed

    private void simplequeryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simplequeryFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_simplequeryFieldActionPerformed

    private void rawQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rawQueryButtonActionPerformed
        this.handleRawQuery();
}//GEN-LAST:event_rawQueryButtonActionPerformed

    private void advancedSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advancedSearchButtonActionPerformed
        this.handleAdvancedQuery();
    }//GEN-LAST:event_advancedSearchButtonActionPerformed

    private void simpleQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpleQueryButtonActionPerformed
        this.handleSimpleQuery();
    }//GEN-LAST:event_simpleQueryButtonActionPerformed

    private void openDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openDirectoryButtonActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        int res = fileChooser.showOpenDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            try {
                File file = fileChooser.getSelectedFile();
                Directory dir = new SimpleFSDirectory(file);
                this.indexSearcher = new IndexSearcher(dir);
            } catch (IOException ex) {
                this.indicateDirectoryError();
                Logger.getLogger(Frontend.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_openDirectoryButtonActionPerformed

    private void indicateDirectoryError() {
        Popup p = PopupFactory.getSharedInstance().getPopup(this, new JLabel("Error opening Directory"), 50, 50);
        p.show();
    }
    private void indicateUnOpenedDirectory() {
        Popup p = PopupFactory.getSharedInstance().getPopup(this, new JLabel("You need to open a directory first"), 50, 50);
        p.show();
    }

    private void handleRawQuery() {
        String queryString = this.rawQueryField.getText();
        QueryParser parser = new QueryParser(Version.LUCENE_30, Constants.FIELD_CONTENT, new StandardAnalyzer(Version.LUCENE_30));
        try {
            Query qr = parser.parse(queryString);
            this.handleQuery(qr);
        } catch (ParseException ex) {
            this.indicateQueryError();
            Logger.getLogger(Frontend.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void handleSimpleQuery() {
        String queryString = this.simplequeryField.getText();
        Term contentTerm = new Term(Constants.FIELD_CONTENT, queryString);
        Term titleTerm = new Term(Constants.FIELD_TITLE, queryString);
        Term keyWordsTerm = new Term(Constants.FIELD_KEYWORDS, queryString);

        TermQuery contentTermQuery = new TermQuery(contentTerm);
        TermQuery titleTermQuery = new TermQuery(titleTerm);
        TermQuery keyWordsTermQuery = new TermQuery(keyWordsTerm);

        BooleanQuery completeQuery = new BooleanQuery();
        completeQuery.add(contentTermQuery, Occur.SHOULD);
        completeQuery.add(titleTermQuery, Occur.SHOULD);
        completeQuery.add(keyWordsTermQuery, Occur.SHOULD);
        this.handleQuery(completeQuery);
    }

    private void handleAdvancedQuery() {
        String contentQueryString = this.advancedQueryContentField.getText();
        String titleQueryString = this.advancedQueryTitleField.getText();
        String keyWordsQueryString = this.advancedQueryKeyWordsField.getText();

        Term contentTerm = new Term(Constants.FIELD_CONTENT, contentQueryString);
        Term titleTerm = new Term(Constants.FIELD_TITLE, titleQueryString);
        Term keyWordsTerm = new Term(Constants.FIELD_KEYWORDS, keyWordsQueryString);

        TermQuery contentTermQuery = new TermQuery(contentTerm);
        TermQuery titleTermQuery = new TermQuery(titleTerm);
        TermQuery keyWordsTermQuery = new TermQuery(keyWordsTerm);

        BooleanQuery completeQuery = new BooleanQuery();
        completeQuery.add(contentTermQuery, Occur.SHOULD);
        completeQuery.add(titleTermQuery, Occur.SHOULD);
        completeQuery.add(keyWordsTermQuery, Occur.SHOULD);
        this.handleQuery(completeQuery);

    }

    private void handleQuery(Query query) {
        QueryRunner runner = new QueryRunner(query, this.indexSearcher, this, this.resultList);
        runner.start();
    }

    private void indicateQueryError() {
        Popup p = PopupFactory.getSharedInstance().getPopup(this, new JLabel("Error parsing Query"), 50, 50);
        p.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Frontend().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField advancedQueryContentField;
    private javax.swing.JTextField advancedQueryKeyWordsField;
    private javax.swing.JPanel advancedQueryPanel;
    private javax.swing.JTextField advancedQueryTitleField;
    private javax.swing.JButton advancedSearchButton;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem openDirectoryButton;
    private javax.swing.JButton rawQueryButton;
    private javax.swing.JTextField rawQueryField;
    private javax.swing.JPanel rawQueryPanel;
    private javax.swing.JList resultList;
    private javax.swing.JButton simpleQueryButton;
    private javax.swing.JPanel simpleQueryPanel;
    private javax.swing.JTextField simplequeryField;
    private javax.swing.JTabbedPane tabbedQueryPane;
    // End of variables declaration//GEN-END:variables
}
